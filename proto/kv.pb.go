// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v3.20.3
// source: kv.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Event_EventType int32

const (
	Event_PUT    Event_EventType = 0
	Event_DELETE Event_EventType = 1
)

// Enum value maps for Event_EventType.
var (
	Event_EventType_name = map[int32]string{
		0: "PUT",
		1: "DELETE",
	}
	Event_EventType_value = map[string]int32{
		"PUT":    0,
		"DELETE": 1,
	}
)

func (x Event_EventType) Enum() *Event_EventType {
	p := new(Event_EventType)
	*p = x
	return p
}

func (x Event_EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Event_EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_kv_proto_enumTypes[0].Descriptor()
}

func (Event_EventType) Type() protoreflect.EnumType {
	return &file_kv_proto_enumTypes[0]
}

func (x Event_EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Event_EventType.Descriptor instead.
func (Event_EventType) EnumDescriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{11, 0}
}

type KeyValue struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Key   []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// First revision number when this key value got created
	CreateRevision int64 `protobuf:"varint,2,opt,name=create_revision,json=createRevision,proto3" json:"create_revision,omitempty"`
	// Last revision number after this key value got updated
	ModRevision int64 `protobuf:"varint,3,opt,name=mod_revision,json=modRevision,proto3" json:"mod_revision,omitempty"`
	// Version of this key (different from revision)
	Version       int64  `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	Value         []byte `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	Lease         int64  `protobuf:"varint,6,opt,name=lease,proto3" json:"lease,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeyValue) Reset() {
	*x = KeyValue{}
	mi := &file_kv_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyValue) ProtoMessage() {}

func (x *KeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyValue.ProtoReflect.Descriptor instead.
func (*KeyValue) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{0}
}

func (x *KeyValue) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *KeyValue) GetCreateRevision() int64 {
	if x != nil {
		return x.CreateRevision
	}
	return 0
}

func (x *KeyValue) GetModRevision() int64 {
	if x != nil {
		return x.ModRevision
	}
	return 0
}

func (x *KeyValue) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *KeyValue) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *KeyValue) GetLease() int64 {
	if x != nil {
		return x.Lease
	}
	return 0
}

type PutRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// We use bytes here because KV should support all formats of data, and not limited to String
	Key   []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Lease(TTL) ID
	Lease int64 `protobuf:"varint,3,opt,name=lease,proto3" json:"lease,omitempty"`
	// If prev_key is set to true, the response will include the previous key-value pair, otherwise no value will be returned
	PrevKv bool `protobuf:"varint,4,opt,name=prev_kv,json=prevKv,proto3" json:"prev_kv,omitempty"`
	// If ignore_value is set to true, value will not be reset.
	IgnoreValue bool `protobuf:"varint,5,opt,name=ignore_value,json=ignoreValue,proto3" json:"ignore_value,omitempty"`
	// If ignore_lease is set to true, lease will not be reset.
	IgnoreLease   bool `protobuf:"varint,6,opt,name=ignore_lease,json=ignoreLease,proto3" json:"ignore_lease,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutRequest) Reset() {
	*x = PutRequest{}
	mi := &file_kv_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutRequest) ProtoMessage() {}

func (x *PutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutRequest.ProtoReflect.Descriptor instead.
func (*PutRequest) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{1}
}

func (x *PutRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *PutRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *PutRequest) GetLease() int64 {
	if x != nil {
		return x.Lease
	}
	return 0
}

func (x *PutRequest) GetPrevKv() bool {
	if x != nil {
		return x.PrevKv
	}
	return false
}

func (x *PutRequest) GetIgnoreValue() bool {
	if x != nil {
		return x.IgnoreValue
	}
	return false
}

func (x *PutRequest) GetIgnoreLease() bool {
	if x != nil {
		return x.IgnoreLease
	}
	return false
}

type PutResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *ResponseHeader        `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	PrevKv        *KeyValue              `protobuf:"bytes,2,opt,name=prev_kv,json=prevKv,proto3" json:"prev_kv,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutResponse) Reset() {
	*x = PutResponse{}
	mi := &file_kv_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutResponse) ProtoMessage() {}

func (x *PutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutResponse.ProtoReflect.Descriptor instead.
func (*PutResponse) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{2}
}

func (x *PutResponse) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *PutResponse) GetPrevKv() *KeyValue {
	if x != nil {
		return x.PrevKv
	}
	return nil
}

type RangeRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Key      []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	RangeEnd []byte                 `protobuf:"bytes,2,opt,name=range_end,json=rangeEnd,proto3,oneof" json:"range_end,omitempty"`
	// if limit == 0, no striction to the number of kvs
	Limit int64 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// MVCC: we can read a specific version
	Revision int64 `protobuf:"varint,4,opt,name=revision,proto3" json:"revision,omitempty"`
	// only return keys not ignore values
	KeysOnly      bool `protobuf:"varint,5,opt,name=keys_only,json=keysOnly,proto3" json:"keys_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RangeRequest) Reset() {
	*x = RangeRequest{}
	mi := &file_kv_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeRequest) ProtoMessage() {}

func (x *RangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeRequest.ProtoReflect.Descriptor instead.
func (*RangeRequest) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{3}
}

func (x *RangeRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *RangeRequest) GetRangeEnd() []byte {
	if x != nil {
		return x.RangeEnd
	}
	return nil
}

func (x *RangeRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RangeRequest) GetRevision() int64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *RangeRequest) GetKeysOnly() bool {
	if x != nil {
		return x.KeysOnly
	}
	return false
}

type RangeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *ResponseHeader        `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Kvs           []*KeyValue            `protobuf:"bytes,2,rep,name=kvs,proto3" json:"kvs,omitempty"`
	More          bool                   `protobuf:"varint,3,opt,name=more,proto3" json:"more,omitempty"`
	Count         int64                  `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RangeResponse) Reset() {
	*x = RangeResponse{}
	mi := &file_kv_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeResponse) ProtoMessage() {}

func (x *RangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeResponse.ProtoReflect.Descriptor instead.
func (*RangeResponse) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{4}
}

func (x *RangeResponse) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *RangeResponse) GetKvs() []*KeyValue {
	if x != nil {
		return x.Kvs
	}
	return nil
}

func (x *RangeResponse) GetMore() bool {
	if x != nil {
		return x.More
	}
	return false
}

func (x *RangeResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type WatchRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to RequestUnion:
	//
	//	*WatchRequest_CreateRequest
	//	*WatchRequest_CancelRequest
	RequestUnion  isWatchRequest_RequestUnion `protobuf_oneof:"request_union"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchRequest) Reset() {
	*x = WatchRequest{}
	mi := &file_kv_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchRequest) ProtoMessage() {}

func (x *WatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchRequest.ProtoReflect.Descriptor instead.
func (*WatchRequest) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{5}
}

func (x *WatchRequest) GetRequestUnion() isWatchRequest_RequestUnion {
	if x != nil {
		return x.RequestUnion
	}
	return nil
}

func (x *WatchRequest) GetCreateRequest() *WatchCreateRequest {
	if x != nil {
		if x, ok := x.RequestUnion.(*WatchRequest_CreateRequest); ok {
			return x.CreateRequest
		}
	}
	return nil
}

func (x *WatchRequest) GetCancelRequest() *WatchCancelRequest {
	if x != nil {
		if x, ok := x.RequestUnion.(*WatchRequest_CancelRequest); ok {
			return x.CancelRequest
		}
	}
	return nil
}

type isWatchRequest_RequestUnion interface {
	isWatchRequest_RequestUnion()
}

type WatchRequest_CreateRequest struct {
	CreateRequest *WatchCreateRequest `protobuf:"bytes,1,opt,name=create_request,json=createRequest,proto3,oneof"`
}

type WatchRequest_CancelRequest struct {
	CancelRequest *WatchCancelRequest `protobuf:"bytes,2,opt,name=cancel_request,json=cancelRequest,proto3,oneof"`
}

func (*WatchRequest_CreateRequest) isWatchRequest_RequestUnion() {}

func (*WatchRequest_CancelRequest) isWatchRequest_RequestUnion() {}

type WatchCreateRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Key      []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	RangeEnd []byte                 `protobuf:"bytes,2,opt,name=range_end,json=rangeEnd,proto3" json:"range_end,omitempty"`
	// if start_revision == 0, it means we will watch from next revision
	// if start_revision > 0, it means we will watch from a specific revision
	StartRevision int64 `protobuf:"varint,3,opt,name=start_revision,json=startRevision,proto3" json:"start_revision,omitempty"`
	PrevKv        bool  `protobuf:"varint,4,opt,name=prev_kv,json=prevKv,proto3" json:"prev_kv,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchCreateRequest) Reset() {
	*x = WatchCreateRequest{}
	mi := &file_kv_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchCreateRequest) ProtoMessage() {}

func (x *WatchCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchCreateRequest.ProtoReflect.Descriptor instead.
func (*WatchCreateRequest) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{6}
}

func (x *WatchCreateRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *WatchCreateRequest) GetRangeEnd() []byte {
	if x != nil {
		return x.RangeEnd
	}
	return nil
}

func (x *WatchCreateRequest) GetStartRevision() int64 {
	if x != nil {
		return x.StartRevision
	}
	return 0
}

func (x *WatchCreateRequest) GetPrevKv() bool {
	if x != nil {
		return x.PrevKv
	}
	return false
}

type WatchCancelRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WatchId       string                 `protobuf:"bytes,1,opt,name=watch_id,json=watchId,proto3" json:"watch_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchCancelRequest) Reset() {
	*x = WatchCancelRequest{}
	mi := &file_kv_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchCancelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchCancelRequest) ProtoMessage() {}

func (x *WatchCancelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchCancelRequest.ProtoReflect.Descriptor instead.
func (*WatchCancelRequest) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{7}
}

func (x *WatchCancelRequest) GetWatchId() string {
	if x != nil {
		return x.WatchId
	}
	return ""
}

type WatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *ResponseHeader        `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	WatchId       string                 `protobuf:"bytes,2,opt,name=watch_id,json=watchId,proto3" json:"watch_id,omitempty"`
	Created       bool                   `protobuf:"varint,3,opt,name=created,proto3" json:"created,omitempty"`
	Canceled      bool                   `protobuf:"varint,4,opt,name=canceled,proto3" json:"canceled,omitempty"`
	Events        []*Event               `protobuf:"bytes,5,rep,name=events,proto3" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchResponse) Reset() {
	*x = WatchResponse{}
	mi := &file_kv_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchResponse) ProtoMessage() {}

func (x *WatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchResponse.ProtoReflect.Descriptor instead.
func (*WatchResponse) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{8}
}

func (x *WatchResponse) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *WatchResponse) GetWatchId() string {
	if x != nil {
		return x.WatchId
	}
	return ""
}

func (x *WatchResponse) GetCreated() bool {
	if x != nil {
		return x.Created
	}
	return false
}

func (x *WatchResponse) GetCanceled() bool {
	if x != nil {
		return x.Canceled
	}
	return false
}

func (x *WatchResponse) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

type DeleteRequest struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	Key      []byte                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	RangeEnd []byte                 `protobuf:"bytes,2,opt,name=range_end,json=rangeEnd,proto3" json:"range_end,omitempty"`
	// if prev_key is true, etcd gets the previous key-value pairs before deleting it
	PrevKey       bool `protobuf:"varint,3,opt,name=prev_key,json=prevKey,proto3" json:"prev_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	mi := &file_kv_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteRequest) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *DeleteRequest) GetRangeEnd() []byte {
	if x != nil {
		return x.RangeEnd
	}
	return nil
}

func (x *DeleteRequest) GetPrevKey() bool {
	if x != nil {
		return x.PrevKey
	}
	return false
}

type DeleteResponse struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Header *ResponseHeader        `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// number of keys deleted by the delete range request
	Deleted int64 `protobuf:"varint,2,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// if prev_key is set in the DeleteRequest, the previous key-value pairs will be returned
	PrevKvs       []*KeyValue `protobuf:"bytes,3,rep,name=prev_kvs,json=prevKvs,proto3" json:"prev_kvs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteResponse) Reset() {
	*x = DeleteResponse{}
	mi := &file_kv_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteResponse) ProtoMessage() {}

func (x *DeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteResponse.ProtoReflect.Descriptor instead.
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteResponse) GetHeader() *ResponseHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *DeleteResponse) GetDeleted() int64 {
	if x != nil {
		return x.Deleted
	}
	return 0
}

func (x *DeleteResponse) GetPrevKvs() []*KeyValue {
	if x != nil {
		return x.PrevKvs
	}
	return nil
}

type Event struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          Event_EventType        `protobuf:"varint,1,opt,name=type,proto3,enum=api.Event_EventType" json:"type,omitempty"`
	Kv            *KeyValue              `protobuf:"bytes,2,opt,name=kv,proto3" json:"kv,omitempty"`
	PrevKv        *KeyValue              `protobuf:"bytes,3,opt,name=prev_kv,json=prevKv,proto3" json:"prev_kv,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_kv_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{11}
}

func (x *Event) GetType() Event_EventType {
	if x != nil {
		return x.Type
	}
	return Event_PUT
}

func (x *Event) GetKv() *KeyValue {
	if x != nil {
		return x.Kv
	}
	return nil
}

func (x *Event) GetPrevKv() *KeyValue {
	if x != nil {
		return x.PrevKv
	}
	return nil
}

type ResponseHeader struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	ClusterId uint64                 `protobuf:"varint,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	MemberId  uint64                 `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	// All the operations will increment this revision number
	Revision      int64  `protobuf:"varint,3,opt,name=revision,proto3" json:"revision,omitempty"`
	RaftTerm      uint64 `protobuf:"varint,4,opt,name=raft_term,json=raftTerm,proto3" json:"raft_term,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResponseHeader) Reset() {
	*x = ResponseHeader{}
	mi := &file_kv_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResponseHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseHeader) ProtoMessage() {}

func (x *ResponseHeader) ProtoReflect() protoreflect.Message {
	mi := &file_kv_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseHeader.ProtoReflect.Descriptor instead.
func (*ResponseHeader) Descriptor() ([]byte, []int) {
	return file_kv_proto_rawDescGZIP(), []int{12}
}

func (x *ResponseHeader) GetClusterId() uint64 {
	if x != nil {
		return x.ClusterId
	}
	return 0
}

func (x *ResponseHeader) GetMemberId() uint64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *ResponseHeader) GetRevision() int64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *ResponseHeader) GetRaftTerm() uint64 {
	if x != nil {
		return x.RaftTerm
	}
	return 0
}

var File_kv_proto protoreflect.FileDescriptor

const file_kv_proto_rawDesc = "" +
	"\n" +
	"\bkv.proto\x12\x03api\"\xae\x01\n" +
	"\bKeyValue\x12\x10\n" +
	"\x03key\x18\x01 \x01(\fR\x03key\x12'\n" +
	"\x0fcreate_revision\x18\x02 \x01(\x03R\x0ecreateRevision\x12!\n" +
	"\fmod_revision\x18\x03 \x01(\x03R\vmodRevision\x12\x18\n" +
	"\aversion\x18\x04 \x01(\x03R\aversion\x12\x14\n" +
	"\x05value\x18\x05 \x01(\fR\x05value\x12\x14\n" +
	"\x05lease\x18\x06 \x01(\x03R\x05lease\"\xa9\x01\n" +
	"\n" +
	"PutRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\fR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\x12\x14\n" +
	"\x05lease\x18\x03 \x01(\x03R\x05lease\x12\x17\n" +
	"\aprev_kv\x18\x04 \x01(\bR\x06prevKv\x12!\n" +
	"\fignore_value\x18\x05 \x01(\bR\vignoreValue\x12!\n" +
	"\fignore_lease\x18\x06 \x01(\bR\vignoreLease\"b\n" +
	"\vPutResponse\x12+\n" +
	"\x06header\x18\x01 \x01(\v2\x13.api.ResponseHeaderR\x06header\x12&\n" +
	"\aprev_kv\x18\x02 \x01(\v2\r.api.KeyValueR\x06prevKv\"\x9f\x01\n" +
	"\fRangeRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\fR\x03key\x12 \n" +
	"\trange_end\x18\x02 \x01(\fH\x00R\brangeEnd\x88\x01\x01\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x03R\x05limit\x12\x1a\n" +
	"\brevision\x18\x04 \x01(\x03R\brevision\x12\x1b\n" +
	"\tkeys_only\x18\x05 \x01(\bR\bkeysOnlyB\f\n" +
	"\n" +
	"_range_end\"\x87\x01\n" +
	"\rRangeResponse\x12+\n" +
	"\x06header\x18\x01 \x01(\v2\x13.api.ResponseHeaderR\x06header\x12\x1f\n" +
	"\x03kvs\x18\x02 \x03(\v2\r.api.KeyValueR\x03kvs\x12\x12\n" +
	"\x04more\x18\x03 \x01(\bR\x04more\x12\x14\n" +
	"\x05count\x18\x04 \x01(\x03R\x05count\"\xa3\x01\n" +
	"\fWatchRequest\x12@\n" +
	"\x0ecreate_request\x18\x01 \x01(\v2\x17.api.WatchCreateRequestH\x00R\rcreateRequest\x12@\n" +
	"\x0ecancel_request\x18\x02 \x01(\v2\x17.api.WatchCancelRequestH\x00R\rcancelRequestB\x0f\n" +
	"\rrequest_union\"\x83\x01\n" +
	"\x12WatchCreateRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\fR\x03key\x12\x1b\n" +
	"\trange_end\x18\x02 \x01(\fR\brangeEnd\x12%\n" +
	"\x0estart_revision\x18\x03 \x01(\x03R\rstartRevision\x12\x17\n" +
	"\aprev_kv\x18\x04 \x01(\bR\x06prevKv\"/\n" +
	"\x12WatchCancelRequest\x12\x19\n" +
	"\bwatch_id\x18\x01 \x01(\tR\awatchId\"\xb1\x01\n" +
	"\rWatchResponse\x12+\n" +
	"\x06header\x18\x01 \x01(\v2\x13.api.ResponseHeaderR\x06header\x12\x19\n" +
	"\bwatch_id\x18\x02 \x01(\tR\awatchId\x12\x18\n" +
	"\acreated\x18\x03 \x01(\bR\acreated\x12\x1a\n" +
	"\bcanceled\x18\x04 \x01(\bR\bcanceled\x12\"\n" +
	"\x06events\x18\x05 \x03(\v2\n" +
	".api.EventR\x06events\"Y\n" +
	"\rDeleteRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\fR\x03key\x12\x1b\n" +
	"\trange_end\x18\x02 \x01(\fR\brangeEnd\x12\x19\n" +
	"\bprev_key\x18\x03 \x01(\bR\aprevKey\"\x81\x01\n" +
	"\x0eDeleteResponse\x12+\n" +
	"\x06header\x18\x01 \x01(\v2\x13.api.ResponseHeaderR\x06header\x12\x18\n" +
	"\adeleted\x18\x02 \x01(\x03R\adeleted\x12(\n" +
	"\bprev_kvs\x18\x03 \x03(\v2\r.api.KeyValueR\aprevKvs\"\x9a\x01\n" +
	"\x05Event\x12(\n" +
	"\x04type\x18\x01 \x01(\x0e2\x14.api.Event.EventTypeR\x04type\x12\x1d\n" +
	"\x02kv\x18\x02 \x01(\v2\r.api.KeyValueR\x02kv\x12&\n" +
	"\aprev_kv\x18\x03 \x01(\v2\r.api.KeyValueR\x06prevKv\" \n" +
	"\tEventType\x12\a\n" +
	"\x03PUT\x10\x00\x12\n" +
	"\n" +
	"\x06DELETE\x10\x01\"\x85\x01\n" +
	"\x0eResponseHeader\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\x04R\tclusterId\x12\x1b\n" +
	"\tmember_id\x18\x02 \x01(\x04R\bmemberId\x12\x1a\n" +
	"\brevision\x18\x03 \x01(\x03R\brevision\x12\x1b\n" +
	"\traft_term\x18\x04 \x01(\x04R\braftTermB\vZ\tapi/protob\x06proto3"

var (
	file_kv_proto_rawDescOnce sync.Once
	file_kv_proto_rawDescData []byte
)

func file_kv_proto_rawDescGZIP() []byte {
	file_kv_proto_rawDescOnce.Do(func() {
		file_kv_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kv_proto_rawDesc), len(file_kv_proto_rawDesc)))
	})
	return file_kv_proto_rawDescData
}

var file_kv_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_kv_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_kv_proto_goTypes = []any{
	(Event_EventType)(0),       // 0: api.Event.EventType
	(*KeyValue)(nil),           // 1: api.KeyValue
	(*PutRequest)(nil),         // 2: api.PutRequest
	(*PutResponse)(nil),        // 3: api.PutResponse
	(*RangeRequest)(nil),       // 4: api.RangeRequest
	(*RangeResponse)(nil),      // 5: api.RangeResponse
	(*WatchRequest)(nil),       // 6: api.WatchRequest
	(*WatchCreateRequest)(nil), // 7: api.WatchCreateRequest
	(*WatchCancelRequest)(nil), // 8: api.WatchCancelRequest
	(*WatchResponse)(nil),      // 9: api.WatchResponse
	(*DeleteRequest)(nil),      // 10: api.DeleteRequest
	(*DeleteResponse)(nil),     // 11: api.DeleteResponse
	(*Event)(nil),              // 12: api.Event
	(*ResponseHeader)(nil),     // 13: api.ResponseHeader
}
var file_kv_proto_depIdxs = []int32{
	13, // 0: api.PutResponse.header:type_name -> api.ResponseHeader
	1,  // 1: api.PutResponse.prev_kv:type_name -> api.KeyValue
	13, // 2: api.RangeResponse.header:type_name -> api.ResponseHeader
	1,  // 3: api.RangeResponse.kvs:type_name -> api.KeyValue
	7,  // 4: api.WatchRequest.create_request:type_name -> api.WatchCreateRequest
	8,  // 5: api.WatchRequest.cancel_request:type_name -> api.WatchCancelRequest
	13, // 6: api.WatchResponse.header:type_name -> api.ResponseHeader
	12, // 7: api.WatchResponse.events:type_name -> api.Event
	13, // 8: api.DeleteResponse.header:type_name -> api.ResponseHeader
	1,  // 9: api.DeleteResponse.prev_kvs:type_name -> api.KeyValue
	0,  // 10: api.Event.type:type_name -> api.Event.EventType
	1,  // 11: api.Event.kv:type_name -> api.KeyValue
	1,  // 12: api.Event.prev_kv:type_name -> api.KeyValue
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_kv_proto_init() }
func file_kv_proto_init() {
	if File_kv_proto != nil {
		return
	}
	file_kv_proto_msgTypes[3].OneofWrappers = []any{}
	file_kv_proto_msgTypes[5].OneofWrappers = []any{
		(*WatchRequest_CreateRequest)(nil),
		(*WatchRequest_CancelRequest)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kv_proto_rawDesc), len(file_kv_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kv_proto_goTypes,
		DependencyIndexes: file_kv_proto_depIdxs,
		EnumInfos:         file_kv_proto_enumTypes,
		MessageInfos:      file_kv_proto_msgTypes,
	}.Build()
	File_kv_proto = out.File
	file_kv_proto_goTypes = nil
	file_kv_proto_depIdxs = nil
}
